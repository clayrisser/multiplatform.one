# File: /Mkpmfile
# Project: root
# File Created: 04-04-2024 15:50:39
# Author: Clay Risser
# -----
# BitSpur (c) Copyright 2021 - 2024
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include $(MKPM)/mkpm
include $(MKPM)/chain
include $(MKPM)/dotenv

PACKAGES := $(shell $(LS) packages)
PLATFORMS := $(shell $(LS) platforms)

ACTIONS += deps
$(ACTION)/deps: package.json \
	$(patsubst %,packages/%/package.json,$(PACKAGES)) \
	$(patsubst %,platforms/%/package.json,$(PLATFORMS)) \
	api/package.json \
	app/package.json
	@$(PNPM) install
	@$(call done,$@)

.PHONY: $(patsubst %,%/%,$(PLATFORMS))
$(patsubst %,%/%,$(PLATFORMS)):
	@$(call make,platforms/$(@D)) $*

.PHONY: $(patsubst %,%/%,$(PACKAGES))
$(patsubst %,%/%,$(PACKAGES)):
	@$(call make,packages/$(@D)) $*

.PHONY: api/%
api/%:
	@$(call make,api) $*

.PHONY: app/%
app/%:
	@$(call make,app) $*

.PHONY: update
update:
	@$(PNPM) update -ri

.PHONY: clean
clean:
	-@$(MKCACHE_CLEAN)
	-@$(WATCHMAN) watch-del-all $(NOFAIL)
	-@$(GIT) clean -fxd \
		$(MKPM_GIT_CLEAN_FLAGS)

.PHONY: purge
ifneq (/home/frappe,$(HOME))
purge: docker/down clean
else
purge: clean
endif
	-@rm -rf frappe/frappe-bench
	-@$(GIT) clean -fxd

.PHONY: storybook/docker/%
storybook/docker/%:
	@$(call make,platforms/storybook/docker)  $*

.PHONY: docker/%
docker/%: docker/data/logs/app.log
	@$(call make,docker) $*
docker/data/logs/app.log:
	@$(MKDIR) -p $(@D)
	@$(TOUCH) $@

.PHONY: prisma/%
prisma/%:
	@$(call make,prisma) $*

.PHONY: api/%
api/%:
	@$(call make,api) $*

.PHONY: frappe/%
frappe/%:
	@$(call make,frappe) $*

.PHONY: version
version:
	@$(CHANGESET)
	@$(CHANGESET) version

.PHONY: publish
publish: version build
	@$(CHANGESET) publish

.PHONY: doctor
doctor:
	@$(GIT) clean -fxd -e .mkpm
	@$(RM) -rf $(HOME)/.local/state/frappe $(NOFAIL)
	@$(RM) -rf frappe/frappe-bench $(NOFAIL)
	@docker pull $(DOCKER_REGISTRY)/devcontainer:latest

.PHONY: cspell-prune
cspell-prune:
	-@mv cspell.json _cspell.json $(NOFAIL)
	@M="$$(pnpm cspell --words-only --unique --no-progress --no-summary \
		`(git ls-files && (git lfs ls-files | cut -d' ' -f3)) | sort | uniq -u | \
		grep -v project-words.txt` 2>&1 | awk '{if ($$0 ~ /^[\x00-\x7F]*$$/) print $$0}' | tr '[:upper:]' '[:lower:]' | sort)" && \
		D="$$(cat project-words.txt)" && \
		(echo "$$M" && echo "$$D") | sort | uniq -d | tee _project-words.txt
	@mv _cspell.json cspell.json
	@mv _project-words.txt project-words.txt

SCRIPTS := $(shell $(CAT) package.json | $(JQ) -r '(.scripts | keys)[]')
.PHONY: $(SCRIPTS)
$(SCRIPTS): ~deps
	@$(PNPM) run $@

-include $(call chain)
