# File: /Mkpmfile
# Project: root
# File Created: 04-04-2024 15:50:39
# Author: Clay Risser
# -----
# BitSpur (c) Copyright 2021 - 2024
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include $(MKPM)/mkpm
include $(MKPM)/chain
include $(MKPM)/dotenv

PACKAGES := $(shell $(LS) packages)
PLATFORMS := $(shell $(LS) platforms)

ACTIONS += deps
$(ACTION)/deps: package.json \
	$(patsubst %,packages/%/package.json,$(PACKAGES)) \
	$(patsubst %,platforms/%/package.json,$(PLATFORMS)) \
	api/package.json \
	app/package.json
	@$(PNPM) install
	@$(call done,$@)

.PHONY: $(patsubst %,%/%,$(PLATFORMS))
$(patsubst %,%/%,$(PLATFORMS)):
	@$(call make,platforms/$(@D)) $*

.PHONY: $(patsubst %,%/%,$(PACKAGES))
$(patsubst %,%/%,$(PACKAGES)):
	@$(call make,packages/$(@D)) $*

.PHONY: api/%
api/%:
	@$(call make,api) $*

.PHONY: app/%
app/%:
	@$(call make,app) $*

.PHONY: update
update:
	@$(PNPM) update -ri

.PHONY: clean
clean:
	@$(call workspace_foreach,clean,$(CLEAN_ARGS))
	-@$(MKCACHE_CLEAN)
	-@$(JEST) --clearCache $(NOFAIL)
	-@$(WATCHMAN) watch-del-all $(NOFAIL)
	-@$(GIT) clean -fXd \
		$(MKPM_GIT_CLEAN_FLAGS) \
		$(NOFAIL)

.PHONY: purge
purge: clean
	@$(GIT) clean -fXd

HELP = help
help: $(MKCHAIN_HELP)
	@$(call workspace_foreach_help,$(MKCHAIN_HELP),$(ARGS))

.PHONY: storybook/docker/%
storybook/docker/%:
	@$(call make,platforms/storybook/docker)  $*

.PHONY: docker/%
docker/%: docker/data/logs/app.log
	@$(call make,docker) $*
docker/data/logs/app.log:
	@$(MKDIR) -p $(@D)
	@$(TOUCH) $@

.PHONY: prisma/%
prisma/%:
	@$(call make,prisma) $*

.PHONY: api/%
api/%:
	@$(call make,api) $*

.PHONY: count
count:
	@$(CLOC) $(shell ($(GIT) ls-files && ($(GIT) lfs ls-files | $(CUT) -d' ' -f3)) | $(SORT) | $(UNIQ) -u)

.PHONY: version
version:
	@$(CHANGESET)
	@$(CHANGESET) version

.PHONY: publish
publish: version build
	@$(CHANGESET) publish

TURBO_SCRIPTS := $(shell $(CAT) turbo.json | $(JQ) -r '(.pipeline | keys)[]')
.PHONY: $(TURBO_SCRIPTS)
$(TURBO_SCRIPTS): ~deps
	@$(TURBO) run $@ $(TURBO_OPTIONS)

-include $(call chain)
