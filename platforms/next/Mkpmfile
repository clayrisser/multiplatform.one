# File: /Mkpmfile
# Project: @platform/next
# File Created: 04-04-2024 15:50:39
# Author: Clay Risser
# -----
# BitSpur (c) Copyright 2021 - 2024
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include $(MKPM)/mkpm
DEFAULT_ENV ?= $(PROJECT_ROOT)/.env
include $(MKPM)/dotenv
include $(MKPM)/chain

export NEXTAUTH_SECRET := $(SECRET)
export NEXTAUTH_URL := $(BASE_URL)

NEXT ?= $(PNPM) next
NEXT_PORT ?= 5000

ACTIONS += deps
$(ACTION)/deps: $(PROJECT_ROOT)/package.json package.json
	@$(call make,$(PROJECT_ROOT)) \~deps DEPS_ARGS=$(DEPS_ARGS)
	@$(call done,$@)

ACTIONS += format~deps
$(ACTION)/format: $(call git_deps,\.((json)|(md)|([jt]sx?))$$)
#	-@$(call eslint_format,$?)
	-@$(call prettier,$?,$(FORMAT_ARGS))
	@$(call done,$@)

ACTIONS += spellcheck~format
$(ACTION)/spellcheck: $(call git_deps,\.(md)$$)
	-@$(call cspell,$?,$(SPELLCHECK_ARGS))
	@$(call done,$@)

ACTIONS += lint~spellcheck
$(ACTION)/lint: $(call git_deps,\.([jt]sx?)$$)
	-@$(call eslint,$?,$(LINT_ARGS))
	@$(call done, $@)

ACTIONS += test~lint
$(ACTION)/test: $(call git_deps,\.([jt]sx?)$$)
	-@$(call jest,$?,$(TEST_ARGS))
	@$(call done, $@)

ACTIONS += build~test
$(ACTION)/build: $(call git_deps,\.([jt]sx?)$$)
	@$(NEXT) build $(BUILD_ARGS)
	@$(call done,$@)

ACTIONS += export~test
$(ACTION)/export: $(call git_deps,\.([jt]sx?)$$)
	@NEXT_STATIC=1 $(NEXT) build
	@NEXT_STATIC=1 $(NEXT) export
	@$(call done,$@)

.PHONY: dev +dev prelaunch
dev: prelaunch +dev
prelaunch: ~deps api/~build
+dev:
	@NODE_OPTIONS='--inspect' $(NEXT) dev -p $(NEXT_PORT)

.PHONY: start +start
start: ~deps api/~build +build +start
+start:
	@$(NEXT) start -p $(NEXT_PORT)

.PHONY: api/%
api/%:
	@$(call make,$(PROJECT_ROOT)) api/$*

-include $(call chain)
