/* do not change this file, it is auto generated by storybook. */

import {
  start,
  prepareStories,
  getProjectAnnotations,
} from "@storybook/react-native";

import "@storybook/addon-ondevice-actions/register";
import "@storybook/addon-ondevice-backgrounds/register";
import "@storybook/addon-ondevice-controls/register";
import "@storybook/addon-ondevice-notes/register";

const normalizedStories = [
  {
    titlePrefix: "",
    directory: "../../packages/cli/scripts",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/cli/scripts",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
  {
    titlePrefix: "",
    directory: "../../packages/cli/src",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/cli/src",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
  {
    titlePrefix: "",
    directory: "../../packages/components/assets",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/components/assets",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
  {
    titlePrefix: "",
    directory: "../../packages/components/css",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/components/css",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
  {
    titlePrefix: "",
    directory: "../../packages/components/src",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/components/src",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
  {
    titlePrefix: "",
    directory: "../../packages/keycloak/routes",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/keycloak/routes",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
  {
    titlePrefix: "",
    directory: "../../packages/keycloak/src",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/keycloak/src",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
  {
    titlePrefix: "",
    directory: "../../packages/keycloak-typegraphql/src",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/keycloak-typegraphql/src",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
  {
    titlePrefix: "",
    directory: "../../packages/locales/src",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/locales/src",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
  {
    titlePrefix: "",
    directory: "../../packages/multiplatform.one/next",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/multiplatform.one/next",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
  {
    titlePrefix: "",
    directory: "../../packages/multiplatform.one/src",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/multiplatform.one/src",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
  {
    titlePrefix: "",
    directory: "../../packages/multiplatform.one/theme",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/multiplatform.one/theme",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
  {
    titlePrefix: "",
    directory: "../../packages/prisma-scripts/src",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/prisma-scripts/src",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
  {
    titlePrefix: "",
    directory: "../../packages/react-native-webpack/src",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/react-native-webpack/src",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
  {
    titlePrefix: "",
    directory: "../../packages/react-query-electron-ipc/background",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/react-query-electron-ipc/background",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
  {
    titlePrefix: "",
    directory: "../../packages/react-query-electron-ipc/src",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/react-query-electron-ipc/src",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
  {
    titlePrefix: "",
    directory: "../../packages/react-query-urql/src",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/react-query-urql/src",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
  {
    titlePrefix: "",
    directory: "../../packages/typegraphql/src",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/typegraphql/src",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
  {
    titlePrefix: "",
    directory: "../../packages/ui/src",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/ui/src",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
  {
    titlePrefix: "",
    directory: "../../packages/utils/src",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/utils/src",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
  {
    titlePrefix: "",
    directory: "../../packages/utils/transpileModules",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/utils/transpileModules",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
  {
    titlePrefix: "",
    directory: "../../packages/zustand/src",
    files: "**/*.@(mdx|stories.@(js|jsx|mjs|ts|tsx))",
    importPathMatcher:
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/,

    req: require.context(
      "../../../packages/zustand/src",
      true,
      /^\.(?:(?:^|\/|(?:(?:(?!(?:^|\/)\.).)*?)\/)(?!\.)(?=.)[^/]*?\.(mdx|stories\.(js|jsx|mjs|ts|tsx)))$/
    ),
  },
];

const annotations = [
  require("./preview"),
  require("@storybook/react-native/dist/preview"),
  require("@storybook/addon-actions/preview"),
];

global.STORIES = normalizedStories;

module?.hot?.accept?.();

if (!global.view) {
  global.view = start({
    annotations,
    storyEntries: normalizedStories,
  });
} else {
  const { importMap } = prepareStories({ storyEntries: normalizedStories });

  global.view._preview.onStoriesChanged({
    importFn: async (importPath) => importMap[importPath],
  });

  global.view._preview.onGetProjectAnnotationsChanged({
    getProjectAnnotations: getProjectAnnotations(global.view, annotations),
  });
}

export const view = global.view;
